{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\React\\\\learning-react\\\\Authentication-demo-app\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw new Error('Invalid mode');\n  }\n  const data = await request.formData();\n  const autData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  fetch('http://localhost:8080/auth/' + mode, {\n    method: 'POST',\n    body: JSON.stringify(autData),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","Error","data","formData","autData","email","password","fetch","method","body","JSON","stringify","headers","$RefreshReg$"],"sources":["D:/Work/React/learning-react/Authentication-demo-app/frontend/src/pages/Authentication.js"],"sourcesContent":["\nimport AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action ({request}){\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n\n  if (mode !== 'login' && mode !== 'signup'){\n    throw new Error ('Invalid mode');\n  }\n\n  const data = await request.formData();\n  const autData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n\n  fetch('http://localhost:8080/auth/' + mode, {\n    method: 'POST',\n    body: JSON.stringify(autData),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n}"],"mappings":";AACA,OAAOA,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAE;EAACC;AAAO,CAAC,EAAC;EACtC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEhD,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAC;IACxC,MAAM,IAAIE,KAAK,CAAE,cAAc,CAAC;EAClC;EAEA,MAAMC,IAAI,GAAG,MAAMP,OAAO,CAACQ,QAAQ,CAAC,CAAC;EACrC,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACF,GAAG,CAAC,OAAO,CAAC;IACxBM,QAAQ,EAAEJ,IAAI,CAACF,GAAG,CAAC,UAAU;EAC/B,CAAC;EAEDO,KAAK,CAAC,6BAA6B,GAAGR,IAAI,EAAE;IAC1CS,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO,CAAC;IAC7BQ,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ;AAAC,IAAAnB,EAAA;AAAAoB,YAAA,CAAApB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}